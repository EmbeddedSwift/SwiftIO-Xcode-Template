public class DigitalInOut {
		
	var obj: DigitalIOObject

	public var outputValue: Bool {
		willSet {
			if obj.direction == DigitalIODirection.output.rawValue {
				swiftHal_gpioWrite(&obj, newValue ? 1 : 0)
			}
		}
	}
    

	public var inputValue: Bool {
		get {
			if obj.direction == DigitalIODirection.input.rawValue {
				return swiftHal_gpioRead(&obj) == 1 ? true : false
			} else {
				return false
			}
		}
	}
    
	public func getDirection() -> DigitalIODirection {
		if obj.direction == DigitalIODirection.input.rawValue {
			return .input
		} else {
			return .output
		}
	}

	public init(_ id: DigitalIOId, mode: DigitalOut.DigitalOutMode) {
		obj = DigitalIOObject()
		obj.id = id.rawValue
		obj.direction = DigitalIODirection.output.rawValue
		obj.outputMode = mode.rawValue
		swiftHal_gpioInit(&obj)
		outputValue = false
	}

	public init(_ id: DigitalIOId, mode: DigitalIn.DigitalInMode) {
        obj = DigitalIOObject()
        obj.id = id.rawValue
        obj.direction = DigitalIODirection.input.rawValue
        obj.inputMode = mode.rawValue
		swiftHal_gpioInit(&obj)
		outputValue = false
	}

	public func setToOutput(_ mode: DigitalOut.DigitalOutMode) {
		obj.direction = DigitalIODirection.output.rawValue
		obj.outputMode = mode.rawValue
		swiftHal_gpioConfig(&obj)
	}

	public func setToInput(_ mode: DigitalIn.DigitalInMode) {
		obj.direction = DigitalIODirection.input.rawValue
		obj.outputMode = mode.rawValue
		swiftHal_gpioConfig(&obj)
	}

	public func write(_ value: Bool) {
		outputValue = value
	}

	public func read() -> Bool {
		return inputValue
	}

    /**
     Reverse the current output value of a pin.
     */
    public func reverse() {
        outputValue = outputValue ? false : true
    }
}




